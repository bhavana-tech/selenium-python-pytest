Question: Create a new python file for your tests and write your selenium tests using pytest. 

import pytest
from selenium import webdriver
from selenium.webdriver.common.keys import keys
from selenium.webdriver.common.by import by
from selenium.webdriver.chrome.service import service
from selenium.webdriver.support.ui import Webserverwait
from selenium.webdriver.support import expectedconditions as Ec

service_object=service(r"//location of chromedriver.exe)
driver=chrome.webdriver(service_object)

@pytest.fixture(scope="module")
def browser():
driver.get("url")
yield driver
driver.close()

def login_test(browser):
   
   WebdriverWait(driver,100).until(EC.presence-of-element_located((by.iD,"username"))).send-keys("abc")
   WebdriverWait(driver,100).until(EC.presence-of-element_located((by.iD,"password"))).send-keys("abc")
   WebdriverWait(driver,100).until(EC.presence-of-element_located((by.iD,"submit"))).send-keys("abc")
   assert "successfull" in browser.page_source


---------------------
What is yield statement? ans - Yield statement will just give the webdriver instance to test functions. Everything before ‘yield’ runs before the test and everything after ‘yield” runs after the test. This is where actual interaction with the browser happens.
--------------------
What is @pytest.fixtures? Here @pytest.fixture is a decorator used in pytest framework .It is used primary to set up a state before the test runs and cleans up afterwards
---------------------------------------------------------
What is fixtures in pytest? ans - in testng, we normally use @before suite which is an annotation ..this is related to java i guess. but pertaining to pytest we use fixtures with scope=session. Why do we use annotations because some tasks must be run before actaully running the test.
eg initializing webdriver instance, so intead of repeating the same set up code everytime, we can centralize it in @beforesuite. 

In below example, browser is a fixture that gets executed once per test session. 
Example of fixtures in pytest:

import pytest
from selenium import webdriver

@pytest.fixture(scope="session")
def browser():
driver=webdriver.Chrome()
yield driver()
driver.close()

def login_test(browser):
browser.get("url")
browser.find_element(BY.ID,"username").send_keys("ewew")
assert "welcome" in browser.page_source
assert "accenture" in page_title

-----------------------------------------------------------------------------------------------------------------
What are fixtures in pytest? 

Fixtures are similar to ANNOTATIONS IN testng. We use fixtures because sme tasks need to be run before the actaul test runs and some needs to be run after the test run gets comepleted.
We use many fixtures like -- scope="session" , scope="module", scope="function"

----------------------------------------------------------------------------------------------------------------


